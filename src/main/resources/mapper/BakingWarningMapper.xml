<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.ecnu.tobacco_display.mapper.BakingMapper">

    <select id="findWarningsByOptions" resultType="BakingWarning">
        select sum(warning_1) as warning_1,
        sum(warning_2) as warning_2,
        sum(warning_3) as warning_3,
        sum(warning_4) as warning_4,
        sum(warning_5) as warning_5,
        sum(warning_6) as warning_6,
        sum(warning_7) as warning_7,
        sum(overcome) as overcome
        <if test="groupId != null or
            deviceId != null ">
            ,bw.device_id
        </if>
        <if test="stationId != null ">
            ,group_id
        </if>
        <if test="location != null ">
            ,station_id
        </if>
        <if test="parentLocation != null ">
            ,location
        </if>
        <if test="deviceId == null and stationId == null and location == null and
            parentLocation == null ">
            ,parent_location
        </if>
        from
        baking_warning bw JOIN ( SELECT location, parent_location,
        device_id, group_id,binfo.station_id
        FROM bakehouse_info binfo LEFT JOIN stations
        s ON binfo.station_id = s.station_id )  bi
        on bw.device_id=bi.device_id
        <trim prefix="where" suffixOverrides="and">
            <if test="startTime != null ">warning_time &gt;= #{startTime,jdbcType=TIMESTAMP} and</if>
            <if test="endTime != null ">warning_time &lt;= #{endTime,jdbcType=TIMESTAMP} and</if>
            <if test="location != null ">location = #{location,jdbcType=VARCHAR} and</if>
            <if test="parentLocation != null ">parent_location = #{parentLocation,jdbcType=VARCHAR} and</if>
            <if test="deviceId != null ">bw.device_id = #{deviceId,jdbcType=VARCHAR} and</if>
            <if test="stationId != null ">station_id = #{stationId} and</if>
            <if test="groupId != null ">group_id = #{stationId} and</if>
        </trim>
        <trim prefix="group by" suffixOverrides=",">
            <if test="groupId != null">
                bw.device_id
            </if>
            <if test="stationId != null">
                group_id
            </if>
            <if test="location != null">
                station_id
            </if>
            <if test="parentLocation != null">
                location
            </if>
            <if test="deviceId == null and stationId == null and location == null and
            parentLocation == null ">
                parent_location
            </if>

        </trim>
        limit 1000
    </select>

    <select id="findDetailWarnings" resultType="BakingWarning">
        select warning_1,
        warning_2,
        warning_3,
        warning_4,
        warning_5,
        warning_6,
        warning_7,
        overcome,
        warning_time,
        device_id
        from
        baking_warning
        <trim prefix="where" suffixOverrides="and">
            <if test="startTime != null ">warning_time &gt;= #{startTime,jdbcType=TIMESTAMP} and</if>
            <if test="endTime != null ">warning_time &lt;= #{endTime,jdbcType=TIMESTAMP} and</if>
            <if test="deviceId != null ">device_id = #{deviceId,jdbcType=VARCHAR} and</if>
        </trim>
        limit 1000
    </select>

    <update id="alterWarning" parameterType="BakingWarning">
        update baking_warning
        set overcome = #{overcome}
        where id = #{id}
    </update>

    <insert id="addWarning" parameterType="BakingWarning">

        INSERT INTO baking_warning (warning_1,
                                    warning_2,
                                    warning_3,
                                    warning_4,
                                    warning_5,
                                    warning_6,
                                    warning_7,
                                    overcome,
                                    warning_time,
                                    device_id)
        values (#{warning1},
                #{warning2},
                #{warning3},
                #{warning4},
                #{warning5},
                #{warning6},
                #{warning7},
                #{overcome},
                #{warningTime,jdbcType=TIMESTAMP},
                #{deviceId})
    </insert>

</mapper>